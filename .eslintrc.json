{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": [
      "./tsconfig.json"
    ]
  },
  "plugins": [
    "@typescript-eslint",
    "effector",
    "unused-imports",
    "dirs",
    "sort-keys-fix",
    "typescript-sort-keys",
    "simple-import-sort",
    "unicorn",
    "tailwindcss"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:effector/react",
    "plugin:effector/scope",
    "plugin:effector/future",
    "plugin:effector/recommended",
    "plugin:import/recommended",
    "plugin:prettier/recommended",
    "plugin:unicorn/recommended",
    "plugin:jsx-a11y/recommended",
    "prettier",
    "plugin:tailwindcss/recommended",
    "next/core-web-vitals"
  ],
  "rules": {
    // react
    "react/react-in-jsx-scope": "off",
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "ignoreCase": true,
        "shorthandFirst": true,
        "reservedFirst": true,
        "multiline": "last"
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      "never"
    ],
    "react/display-name": "off",
    "react/jsx-boolean-value": [
      "error",
      "never"
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".tsx",
          ".jsx"
        ]
      }
    ],
    // eslint
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      },
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let"
        ],
        "next": [
          "const",
          "let"
        ]
      }
    ],
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "no-unused-vars": "off",
    "no-console": "error",

    "no-multi-spaces": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ],
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "quotes": [
      "error",
      "single"
    ],
    "semi": [
      "error",
      "always"
    ],
    // import
    "import/no-unresolved": "off",
    "import/no-restricted-paths": ["error",{
      "zones": [
        {
          "target": ["./src/shared/**"],
          "from": ["./src/widgets/**", "./src/pages/**", "./src/features/**", "./src/entity/**"],
          "message": "Слой shared не может содержать импорт из других слоев"
        },
        {
          "target": ["./src/entity/**"],
          "from": ["./src/widgets/**", "./src/pages/**", "./src/features/**"],
          "message": "Слой entity не может содержать импорт из слоев: widgets, pages, features"
        },
        {
          "target": ["./src/features/**"],
          "from": ["./src/widgets/**", "./src/pages/**"],
          "message": "Слой features не может содержать импорт из слоев: widgets, pages"
        },
        {
          "target": ["./src/widgets/**"],
          "from": ["./src/pages/**"],
          "message": "Слой widgets не может содержать импорт из слоя pages"
        }
      ]
    }],
    // sort-keys-fix
    "sort-keys-fix/sort-keys-fix": "error",
    // unused-imports
    "unused-imports/no-unused-imports": "error",
    // unicorn
    "unicorn/filename-case": [
      "error",
      {
        "case": "kebabCase",
        "ignore": [
          "[city_id]"
        ]
      }
    ],
    "unicorn/consistent-function-scoping": "off",
    "unicorn/prevent-abbreviations": "off",
    "unicorn/no-null": "off",
    "unicorn/explicit-length-check": "off",
    "unicorn/no-array-callback-reference": "off",
    "unicorn/no-array-reduce": "off",
    "unicorn/prefer-module": "off",
    "unicorn/prefer-node-protocol": "off",
    // typescript
    "typescript-sort-keys/interface": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": false,
        "requiredFirst": true
      }
    ],
    "typescript-sort-keys/string-enum": [
      "error",
      "asc",
      {
        "caseSensitive": true
      }
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-duplicate-enum-values": "warn",
    // jsx-a11y
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": [
          "Link"
        ],
        "specialLink": [
          "hrefLeft",
          "hrefRight"
        ],
        "aspects": [
          "invalidHref",
          "preferButton"
        ]
      }
    ],
    // simple-import-sort
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          [
            "^(react)(\\/.*|$)",
            "^next"
          ],
          [
            "^@?\\w"
          ],
          [
            "^(api)(/.*|$)",
            "^(queries)(/.*|$)",
            "^(components)(/.*|$)",
            "^(hooks)(/.*|$)",
            "^(constants)(/.*|$)",
            "^(store)(/.*|$)",
            "^(utils)(/.*|$)",
            "^(types)(/.*|$)"
          ],
          [
            "^\\."
          ],
          [
            "(jpe?g|png|webp|svg|avif)$"
          ],
          [
            "(css)$"
          ]
        ]
      }
    ],
    "simple-import-sort/exports": "error"
  }
}
